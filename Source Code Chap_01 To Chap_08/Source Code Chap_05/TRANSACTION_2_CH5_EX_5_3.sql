/***************************************************
Source for Chapter 5 , Example 5.3
Show create TRANSACTION with START_TRANSACTION
****************************************************/

DELIMITER $
DROP PROCEDURE IF EXISTS TRANSACTION_2$
CREATE PROCEDURE TRANSACTION_2(IN PARM_ITEM_ID INT,IN PARM_ITEM_NAME LONGTEXT,IN PARM_CATEGORY_ID INT)
BEGIN
  DECLARE IS_ITEM_ID_EXISTS INT DEFAULT 0;
  DECLARE IS_ITEM_ID_DUPLICATE INT DEFAULT 0;
  DECLARE TEMP_ITEM_ID INT;
  DECLARE DUPLICATE_ERROR CONDITION FOR 1062;
  DECLARE CONTINUE HANDLER FOR DUPLICATE_ERROR SET IS_ITEM_ID_DUPLICATE = 1;
  SET TEMP_ITEM_ID = PARM_ITEM_ID;
  SELECT PARM_ITEM_ID AS 'BEFORE_ITEM_ID',PARM_ITEM_NAME AS 'BEFORE_ITEM_NAME', PARM_CATEGORY_ID AS 'BEFORE_CATEGORY_ID';
  START TRANSACTION;
    SELECT COUNT(*) INTO IS_ITEM_ID_EXISTS FROM TBL_ITEMS WHERE ItemID = PARM_ITEM_ID;
    IF IS_ITEM_ID_EXISTS THEN
      INSERT_DATA : LOOP
        SET IS_ITEM_ID_DUPLICATE = 0;
        SET TEMP_ITEM_ID = TEMP_ITEM_ID + 1;
        INSERT INTO TBL_ITEMS(ItemID,ItemName,CategoryID) VALUES (TEMP_ITEM_ID,PARM_ITEM_NAME,PARM_CATEGORY_ID);
        IF NOT IS_ITEM_ID_DUPLICATE THEN LEAVE INSERT_DATA; END IF;
      END LOOP INSERT_DATA;
      SELECT TEMP_ITEM_ID AS 'AFTER_ITEM_ID',PARM_ITEM_NAME AS 'AFTER_ITEM_NAME', PARM_CATEGORY_ID AS 'AFTER_CATEGORY_ID';
    ELSE
      INSERT INTO TBL_ITEMS(ItemID,ItemName,CategoryID) VALUES (PARM_ITEM_ID,PARM_ITEM_NAME,PARM_CATEGORY_ID);
      SET IS_ITEM_ID_EXISTS = 0;
      SET IS_ITEM_ID_DUPLICATE = 0;
    END IF;
  COMMIT;
  SELECT 'COMMIT THIS TRANSACTION' AS 'RESULT';
END$


/***************************************************
End of file
****************************************************/